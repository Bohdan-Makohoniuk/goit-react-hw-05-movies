{"version":3,"file":"static/js/736.a55dff62.chunk.js","mappings":"uPAEaA,EAAWC,EAAAA,GAAAA,GAAH,6CAGRC,EAAWD,EAAAA,GAAAA,GAAH,0HAKRE,EAAOF,EAAAA,GAAAA,GAAH,0CAGJG,EAAYH,EAAAA,GAAAA,EAAH,sC,SCmCtB,EAxCa,WACT,OAAwBI,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACOC,GAAWC,EAAAA,EAAAA,MAAXD,QAOP,IAJAE,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAUH,GAASI,KAAKL,EAC3B,GAAE,CAACC,IAECF,EAML,OACI,SAACN,EAAD,UACDM,EAAKO,OAAS,EACXP,EAAKQ,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,aAAcC,EAA3B,EAA2BA,UAA3B,OACP,UAAChB,EAAD,YACE,gBACEiB,IACEF,EAAY,yCAC0BA,GAD1B,+CAIdG,IAAI,QACJC,QAAQ,OACRC,MAAO,IACPC,OAAQ,OAEV,SAACpB,EAAD,UAAOa,KACP,UAACZ,EAAD,0BAAwBc,OAbXH,EADR,IAiBT,kCAIT,C,mMC7CDS,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAM,mCAICC,EAAiB,mCAAG,sGACRF,EAAAA,EAAAA,IAAA,oCAAuCC,IAD/B,uBACvBE,EADuB,EACvBA,KADuB,kBAExBA,EAAKC,SAFmB,2CAAH,qDAOjBC,EAAY,mCAAG,WAAOrB,GAAP,uFACNgB,EAAAA,EAAAA,IAAA,iBACChB,EADD,oBACoBiB,IACjCK,OAAM,SAAAC,GACH,MAAM,IAAIC,MAAM,uCACnB,IALmB,cAClBC,EADkB,yBAMjBA,EAAIN,MANa,2CAAH,sDAcZO,EAAiB,mCAAG,WAAMC,GAAN,uFACRX,EAAAA,EAAAA,IAAA,+BACGC,EADH,iCAC+BU,EAD/B,gCADQ,cACzBC,EADyB,yBAIxBA,EAAST,MAJe,2CAAH,sDAQjBhB,EAAS,mCAAG,WAAM0B,GAAN,uFAELb,EAAAA,EAAAA,IAAA,gBAAmBa,EAAnB,4BAA6CZ,EAA7C,oBAFK,cAEjBQ,EAFiB,yBAGhBA,EAAIN,KAAKrB,MAHO,2CAAH,sDASTgC,EAAU,mCAAG,WAAMvB,GAAN,yFACDS,EAAAA,EAAAA,IAAA,gBACZT,EADY,4BACUU,EADV,2BADC,uBAChBE,EADgB,EAChBA,KADgB,kBAIjBA,EAAKC,SAJY,2CAAH,qD","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","servies/api.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  list-style: none;\n`;\nexport const CastItem = styled.li`\n  margin: 10px 0 16px;\n  padding: 2px 8px;\n  //box-shadow: 1px 2px 4px 3px rgba(0, 0, 0, 0.5);\n`;\nexport const Name = styled.h3`\n  margin: 8px 0;\n`;\nexport const Character = styled.p`\n  margin: 0;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getActors } from 'servies/api';\n// import { CastItem, CastList } from './Cast.styled';\nimport { CastItem, CastList, Character, Name } from './Cast.styled';\n\n\n\nconst Cast = () => {\n    const [cast, setCast] = useState([]);\n    const {movieId} = useParams();\n \n\n    useEffect(() => {\n        getActors(movieId).then(setCast);\n    }, [movieId]);\n\n    if (!cast) {\n    return;\n  }\n    \n\n\n    return (\n        <CastList>\n      {cast.length > 0\n        ? cast.map(({ id, name, profile_path, character }) => (\n            <CastItem key={id}>\n              <img\n                src={\n                  profile_path\n                    ? `https://image.tmdb.org/t/p/w200${profile_path}`\n                    : `http://www.suryalaya.org/images/no_image.jpg`\n                }\n                alt=\"actor\"\n                loading=\"lazy\"\n                width={120}\n                height={180}\n              />\n              <Name>{name}</Name>\n              <Character> Character: {character}</Character>\n            </CastItem>\n          ))\n        : \"Sorry, there isn't any info :(\"}\n    </CastList>\n       \n);\n};\nexport default Cast;","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst KEY = '621fcee78f56c436770adc2b5b61fa26';\n\n\n// trending movies\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`/trending/all/day?api_key=${KEY}`);\n  return data.results;\n};\n\n\n// movie details\nexport const getMovieById = async (movieId) => {\n    const res = await axios\n        .get(`/movie/${movieId}?api_key=${KEY}`)\n        .catch(error => {\n            throw new Error('Oops... seems like an error occured.');\n        });\n    return res.data;\n}\n\n// export const getMoviesdByQuery = async query => {\n//     const res = await axios.get(`search/movie?api_key=${KEY}&query=${query}&language=en-US&page=1&include_adult=false`)\n//     return res.data.results;\n// }\n\nexport const getMoviesdByQuery = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return response.data;\n};\n\n\nexport const getActors = async moviId => {\n  \n  const res = await axios.get(`movie/${moviId}/credits?api_key=${KEY}&language=en-US`)\n  return res.data.cast;\n};\n\n\n\n\nexport const getReviews = async id => {\n  const { data } = await axios.get(\n    `movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n  return data.results;\n};\n\n"],"names":["CastList","styled","CastItem","Name","Character","useState","cast","setCast","movieId","useParams","useEffect","getActors","then","length","map","id","name","profile_path","character","src","alt","loading","width","height","axios","KEY","getTrendingMovies","data","results","getMovieById","catch","error","Error","res","getMoviesdByQuery","query","response","moviId","getReviews"],"sourceRoot":""}