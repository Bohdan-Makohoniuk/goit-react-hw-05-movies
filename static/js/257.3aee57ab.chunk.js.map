{"version":3,"file":"static/js/257.3aee57ab.chunk.js","mappings":"iRAGaA,EAAQC,EAAAA,GAAAA,GAAH,sCAGLC,EAAWD,EAAAA,GAAAA,IAAH,8FAKRE,EAAYF,EAAAA,GAAAA,IAAH,+CAGTG,EAAaH,EAAAA,GAAAA,GAAH,4FAMVI,EAASJ,EAAAA,GAAAA,OAAH,0MAYNK,GAAWL,EAAAA,EAAAA,IAAOM,EAAAA,GAAPN,CAAH,2GAMRO,EAAUP,EAAAA,GAAAA,IAAH,4E,mBC6DpB,EApFsB,WAAO,IAAD,IAEpBQ,GAAWC,EAAAA,EAAAA,MAETC,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,MAEAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaN,GAASO,KAAKH,EAC5B,GAAE,CAACJ,KAIHK,EAAAA,EAAAA,YAAU,YACTC,EAAAA,EAAAA,IAAaN,GAASO,MAAK,SAAAC,GAAI,OAAIJ,EAASI,EAAb,GAChC,GAAE,CAACR,IAEJ,IAAQS,EACNN,EADMM,eAAgBC,EACtBP,EADsBO,SAAUC,EAChCR,EADgCQ,OAAQC,EACxCT,EADwCS,YAGpCC,GADuB,GAD3BV,EADqDW,cAG5BC,QAAQ,GAKnC,GAAKZ,EAIL,OACC,6BACG,SAACT,EAAD,CAAQsB,KAAK,SAAb,UACE,UAACrB,EAAD,CAAUsB,GAAE,oBAAEnB,EAASoB,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,IAAtC,WACE,SAAC,MAAD,CAAmBC,KAAM,KAD3B,gBAKF,UAAC7B,EAAD,YACE,gBACE8B,IACET,EAAW,yCAC2BA,GAD3B,+CAIbU,MAAO,IACPC,OAAQ,IACRC,QAAQ,OACRC,IAAI,YAEN,UAACjC,EAAD,YACE,SAACH,EAAD,UAAQoB,KACR,yCAAiBI,EAAjB,QACA,sCACA,yBAAIH,EAAJ,QACA,oCACA,SAACjB,EAAD,UACGkB,GACCA,EAAOe,QACPf,EAAOgB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OAAkB,wBAAcA,GAALD,EAA3B,aAInB,UAAC/B,EAAD,YACE,oDACA,2BACE,yBACE,SAAC,KAAD,CAAMoB,GAAG,OAAOC,OAAK,UAAOpB,EAASoB,OAArC,qBAIF,0BACG,KACD,SAAC,KAAD,CAAMD,GAAG,UAAUC,OAAK,UAAOpB,EAASoB,OAAxC,+BAMN,SAAC,KAAD,MAGL,EAIA,U,mMCnGDY,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAM,mCAICC,EAAiB,mCAAG,sGACRF,EAAAA,EAAAA,IAAA,oCAAuCC,IAD/B,uBACvBvB,EADuB,EACvBA,KADuB,kBAExBA,EAAKyB,SAFmB,2CAAH,qDAOjB3B,EAAY,mCAAG,WAAON,GAAP,uFACN8B,EAAAA,EAAAA,IAAA,iBACC9B,EADD,oBACoB+B,IACjCG,OAAM,SAAAC,GACH,MAAM,IAAIC,MAAM,uCACnB,IALmB,cAClBC,EADkB,yBAMjBA,EAAI7B,MANa,2CAAH,sDASZ8B,EAAiB,mCAAG,WAAMC,GAAN,uFACXT,EAAAA,EAAAA,IAAA,+BAAkCC,EAAlC,kBAA+CQ,EAA/C,+CADW,cACvBF,EADuB,yBAEtBA,EAAI7B,KAAKyB,SAFa,2CAAH,sDAOjBO,EAAS,mCAAG,WAAMC,GAAN,uFAELX,EAAAA,EAAAA,IAAA,gBAAmBW,EAAnB,4BAA6CV,EAA7C,oBAFK,cAEjBM,EAFiB,yBAGhBA,EAAI7B,KAAKkC,MAHO,2CAAH,sDASTC,EAAU,mCAAG,WAAMf,GAAN,yFACDE,EAAAA,EAAAA,IAAA,gBACZF,EADY,4BACUG,EADV,2BADC,uBAChBvB,EADgB,EAChBA,KADgB,kBAIjBA,EAAKyB,SAJY,2CAAH,qD","sources":["pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx","servies/api.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Title = styled.h2`\n  margin: 0;\n`;\nexport const MovieBox = styled.div`\n  display: flex;\n  padding: 20px;\n  border-bottom: solid 1px grey;\n`;\nexport const MovieInfo = styled.div`\n  padding: 20px 40px;\n`;\nexport const GenresList = styled.ul`\n  list-style: none;\n  display: flex;\n  padding: 0;\n  gap: 16px;\n`;\nexport const Button = styled.button`\n  margin-top: 16px;\n  padding: 8px 16px;\n  border-radius: 4px;\n  border: none;\n  margin-bottom: 10px;\n  font-weight: 500;\n  &:hover {\n    background-color: #63c5da;\n  }\n`;\n\nexport const LinkBack = styled(Link)`\n  display: flex;\n  font-size: 14px;\n  align-items: center;\n  column-gap: 10px;\n`;\nexport const InfoBox = styled.div`\n  padding: 20px;\n  border-bottom: solid 1px grey;\n`;","import { useParams, Outlet, Link } from 'react-router-dom';\nimport { getMovieById } from 'servies/api';\nimport { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\n// import { useNavigate } from 'react-router-dom';\nimport { Button,\n  GenresList,\n  InfoBox,\n  LinkBack,\n  MovieBox,\n  MovieInfo,\n  Title } from './MovieDetails.styled';\nimport { HiArrowNarrowLeft } from 'react-icons/hi';\n// const baseUrl = 'https://image.tmdb.org/t/p/w500/';\n\n const MovieDetails = () => {\n    // const navigate = useNavigate();\n  const location = useLocation();\n//   console.log(location);\n  const { movieId } = useParams();\n  // console.log(MovieDetails);\n  const [movie, setMovie] = useState(null);\n  // console.log(movie);\n  useEffect(() => {\n    getMovieById(movieId).then(setMovie);\n  }, [movieId]);\n    \n\n\n   useEffect(() => {\n    getMovieById(movieId).then(data => setMovie(data));\n  }, [movieId]);\n\n  const { original_title, overview, genres, poster_path, vote_average } =\n    movie;\n  const score = vote_average * 10;\n  const scoreToFixed = score.toFixed(2);\n   \n   \n   \n   \n  if (!movie) {\n    return;\n  }\n\n  return (\n   <main>\n      <Button type=\"button\">\n        <LinkBack to={location.state?.from ?? '/'}>\n          <HiArrowNarrowLeft size={16} />\n          Go back\n        </LinkBack>\n      </Button>\n      <MovieBox>\n        <img\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w300${poster_path}`\n              : `http://www.suryalaya.org/images/no_image.jpg`\n          }\n          width={320}\n          height={380}\n          loading=\"lazy\"\n          alt=\"poster\"\n        />\n        <MovieInfo>\n          <Title>{original_title}</Title>\n          <h3>User score: {scoreToFixed}%</h3>\n          <h3>Overview</h3>\n          <p>{overview} </p>\n          <h3>Genres</h3>\n          <GenresList>\n            {genres &&\n              genres.length &&\n              genres.map(({ id, name }) => <li key={id}>{name}</li>)}\n          </GenresList>\n        </MovieInfo>\n      </MovieBox>\n      <InfoBox>\n        <h4>Additional information</h4>\n        <ul>\n          <li>\n            <Link to=\"cast\" state={{ ...location.state }}>\n              Cast\n            </Link>\n          </li>\n          <li>\n            {' '}\n            <Link to=\"reviews\" state={{ ...location.state }}>\n              Reviews\n            </Link>\n          </li>\n        </ul>\n      </InfoBox>\n      <Outlet />\n    </main>\n  );\n};\n\nexport default MovieDetails;\n\n <>\n      {/* <Btn type ='button' onClick={handleGoBack} >Go back</Btn>\n      <div>\n        <h2>{movie.title}</h2>\n        <img src={`${baseUrl + movie.poster_path}`} alt={movie.title} />\n        <p>Overview:{movie.overview}</p>\n          </div>\n          <Link to='cast' state={location.state} >Cast</Link>\n          <Link to='reviews'state={location.state} >Reviews</Link>\n          <Outlet/> */}\n    </>","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst KEY = '621fcee78f56c436770adc2b5b61fa26';\n\n\n// trending movies\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`/trending/all/day?api_key=${KEY}`);\n  return data.results;\n};\n\n\n// movie details\nexport const getMovieById = async (movieId) => {\n    const res = await axios\n        .get(`/movie/${movieId}?api_key=${KEY}`)\n        .catch(error => {\n            throw new Error('Oops... seems like an error occured.');\n        });\n    return res.data;\n}\n\nexport const getMoviesdByQuery = async query => {\n    const res = await axios.get(`search/movie?api_key=${KEY}&query=${query}&language=en-US&page=1&include_adult=false`)\n    return res.data.results;\n}\n\n\n\nexport const getActors = async moviId => {\n  \n  const res = await axios.get(`movie/${moviId}/credits?api_key=${KEY}&language=en-US`)\n  return res.data.cast;\n};\n\n\n\n\nexport const getReviews = async id => {\n  const { data } = await axios.get(\n    `movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n  return data.results;\n};\n\n"],"names":["Title","styled","MovieBox","MovieInfo","GenresList","Button","LinkBack","Link","InfoBox","location","useLocation","movieId","useParams","useState","movie","setMovie","useEffect","getMovieById","then","data","original_title","overview","genres","poster_path","scoreToFixed","vote_average","toFixed","type","to","state","from","size","src","width","height","loading","alt","length","map","id","name","axios","KEY","getTrendingMovies","results","catch","error","Error","res","getMoviesdByQuery","query","getActors","moviId","cast","getReviews"],"sourceRoot":""}