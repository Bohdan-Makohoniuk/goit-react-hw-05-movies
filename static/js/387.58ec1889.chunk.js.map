{"version":3,"file":"static/js/387.58ec1889.chunk.js","mappings":"uPAEaA,EAAcC,EAAAA,GAAAA,GAAH,6CAGXC,EAAcD,EAAAA,GAAAA,GAAH,wEAKXE,EAASF,EAAAA,GAAAA,EAAH,0CAGNG,EAAUH,EAAAA,GAAAA,KAAH,sC,SCmBpB,EA1BgB,WACd,OAA8BI,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAMR,IAJAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAWH,GAASI,KAAKL,EAC1B,GAAE,CAACC,IAECF,EAIL,OACE,0BACE,SAACN,EAAD,WACG,oDACCM,EAAQO,KAAI,SAAAC,GAAM,OAChB,UAACZ,EAAD,YACE,UAACC,EAAD,uBAAkBW,EAAOC,WACzB,SAACX,EAAD,UAAUU,EAAOE,YAFDF,EAAOG,GADT,OAS3B,C,mMC7BDC,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAM,mCAICC,EAAiB,mCAAG,sGACRF,EAAAA,EAAAA,IAAA,oCAAuCC,IAD/B,uBACvBE,EADuB,EACvBA,KADuB,kBAExBA,EAAKC,SAFmB,2CAAH,qDAOjBC,EAAY,mCAAG,WAAOf,GAAP,uFACNU,EAAAA,EAAAA,IAAA,iBACCV,EADD,oBACoBW,IACjCK,OAAM,SAAAC,GACH,MAAM,IAAIC,MAAM,uCACnB,IALmB,cAClBC,EADkB,yBAMjBA,EAAIN,MANa,2CAAH,sDAcZO,EAAiB,mCAAG,WAAMC,GAAN,uFACRX,EAAAA,EAAAA,IAAA,+BACGC,EADH,iCAC+BU,EAD/B,gCADQ,cACzBC,EADyB,yBAIxBA,EAAST,MAJe,2CAAH,sDAQjBU,EAAS,mCAAG,WAAMC,GAAN,uFAELd,EAAAA,EAAAA,IAAA,gBAAmBc,EAAnB,4BAA6Cb,EAA7C,oBAFK,cAEjBQ,EAFiB,yBAGhBA,EAAIN,KAAKY,MAHO,2CAAH,sDASTtB,EAAU,mCAAG,WAAMM,GAAN,yFACDC,EAAAA,EAAAA,IAAA,gBACZD,EADY,4BACUE,EADV,2BADC,uBAChBE,EADgB,EAChBA,KADgB,kBAIjBA,EAAKC,SAJY,2CAAH,qD","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","servies/api.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const RevievsList = styled.ul`\n  list-style: none;\n`;\nexport const RevievsItem = styled.li`\n  margin: 10px 0 16px;\n  padding: 2px 8px;\n \n`;\nexport const Author = styled.p`\n  margin: 8px 0;\n`;\nexport const Content = styled.span`\n  margin: 0;\n`;","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviews } from 'servies/api';\nimport {RevievsList, RevievsItem, Author, Content} from './Reviews.styled'\n\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getReviews(movieId).then(setReviews);\n  }, [movieId]);\n\n  if (!reviews) {\n    return;\n  }\n\n  return (\n    <div>\n      <RevievsList>\n        {<p>There is no reviews yet</p> ||\n          reviews.map(review => (\n            <RevievsItem key={review.id}>\n              <Author> Author: {review.author}</Author>\n              <Content>{review.content}</Content>\n            </RevievsItem>\n          ))}\n      </RevievsList>\n    </div>\n  );\n};\nexport default Reviews;","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst KEY = '621fcee78f56c436770adc2b5b61fa26';\n\n\n// trending movies\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`/trending/all/day?api_key=${KEY}`);\n  return data.results;\n};\n\n\n// movie details\nexport const getMovieById = async (movieId) => {\n    const res = await axios\n        .get(`/movie/${movieId}?api_key=${KEY}`)\n        .catch(error => {\n            throw new Error('Oops... seems like an error occured.');\n        });\n    return res.data;\n}\n\n// export const getMoviesdByQuery = async query => {\n//     const res = await axios.get(`search/movie?api_key=${KEY}&query=${query}&language=en-US&page=1&include_adult=false`)\n//     return res.data.results;\n// }\n\nexport const getMoviesdByQuery = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return response.data;\n};\n\n\nexport const getActors = async moviId => {\n  \n  const res = await axios.get(`movie/${moviId}/credits?api_key=${KEY}&language=en-US`)\n  return res.data.cast;\n};\n\n\n\n\nexport const getReviews = async id => {\n  const { data } = await axios.get(\n    `movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n  return data.results;\n};\n\n"],"names":["RevievsList","styled","RevievsItem","Author","Content","useState","reviews","setReviews","movieId","useParams","useEffect","getReviews","then","map","review","author","content","id","axios","KEY","getTrendingMovies","data","results","getMovieById","catch","error","Error","res","getMoviesdByQuery","query","response","getActors","moviId","cast"],"sourceRoot":""}